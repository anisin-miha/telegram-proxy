import fetch from "node-fetch";

export default async function handler(req, res) {
  // üëá –†–∞–∑—Ä–µ—à–∞–µ–º CORS
  res.setHeader("Access-Control-Allow-Origin", "*");
  res.setHeader("Access-Control-Allow-Methods", "POST, OPTIONS");
  res.setHeader("Access-Control-Allow-Headers", "Content-Type");

  // üëá –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º preflight-–∑–∞–ø—Ä–æ—Å (OPTIONS)
  if (req.method === "OPTIONS") {
    return res.status(200).end();
  }

  if (req.method !== "POST") {
    return res.status(405).send("Method Not Allowed");
  }

  const { name, phone, email, date, people } = req.body;

  const message = `
üì© <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</b>
üë§ –ò–º—è: ${name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
üìß Email: ${email}
üìÖ –î–∞—Ç–∞: ${date}
üë• –ö–æ–ª-–≤–æ —á–µ–ª–æ–≤–µ–∫: ${people}
  `.trim();

  // –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ chat_id –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const chatIds = process.env.TELEGRAM_CHAT_IDS.split(",").map((id) =>
    id.trim()
  );

  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É chat_id
    const telegramRequests = chatIds.map((chatId) =>
      fetch(
        `https://api.telegram.org/bot${process.env.TELEGRAM_TOKEN}/sendMessage`,
        {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            chat_id: chatId,
            text: message,
            parse_mode: "HTML",
          }),
        }
      )
    );

    // –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    const telegramResponses = await Promise.all(telegramRequests);
    const results = await Promise.all(
      telegramResponses.map((response) => response.json())
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
    for (let i = 0; i < telegramResponses.length; i++) {
      if (!telegramResponses[i].ok) {
        throw new Error(`Telegram API error for chat_id ${chatIds[i]}`);
      }
    }

    console.log("Telegram –æ—Ç–≤–µ—Ç—ã:", results);
    res.status(200).json({ ok: true });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:", error);
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram" });
  }
}
